%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 99cf065fd0d544a5a1f86126db664c96, type: 3}
  m_Name: CycleInfo
  m_EditorClassIdentifier: 
  message: No problem! Firstly the CPU fetches the next instruction from the memory
    address which is currently saved in the program counter and writes it into the
    instruction register. It immediately increments the program counter, to point
    to the next instruction. The instruction in the instruction register is then
    decoded, to determine the instruction type, for example SUM or MOVE. If needed,
    the CPU also fetches required data from memory in this stage. Afterwards the
    control unit passes the decoded instruction to the relevant functional units
    to execute the instruction and possibly save the result into a register. This
    completes the cycle, which means a new instruction can be fetched.
  dialogueCharacter: {fileID: 11400000, guid: f0186c31d789f824abaa85641b49a805, type: 2}
  dialogueOptions:
  - {fileID: 11400000, guid: 70ce84211bb8a7d4fa8cc604ac0f5678, type: 2}
  - {fileID: 11400000, guid: f4fca8f6bd250c741a663ce9022c8e66, type: 2}
